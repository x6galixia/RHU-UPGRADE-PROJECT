CREATE TABLE rhu (
    rhu_id SERIAL PRIMARY KEY NOT NULL,
    rhu_name VARCHAR(255) NOT NULL,
    rhu_address VARCHAR(255) NOT NULL
);

CREATE TABLE users (
    id SERIAL PRIMARY KEY NOT NULL, 
    rhu_id INTEGER REFERENCES rhu(rhu_id) ON DELETE CASCADE,
    surname VARCHAR(255) NULL,
    firstname VARCHAR(255) NULL,
    middle_name VARCHAR(50) NULL,
    profession VARCHAR(255) NULL,
    license_number VARCHAR(255) NULL,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    user_type VARCHAR(50) NOT NULL
);

CREATE TABLE patients (
    patient_id VARCHAR(255) PRIMARY KEY NOT NULL,
    rhu_id INTEGER REFERENCES rhu(rhu_id) ON DELETE CASCADE,
    last_name VARCHAR(50) NOT NULL,
    first_name VARCHAR(50) NOT NULL,
    middle_name VARCHAR(50) NULL,
    suffix VARCHAR(50) NULL,
    phone VARCHAR(20) NULL,
    gender VARCHAR(10) NULL CHECK (gender IN ('Male', 'Female')),
    birthdate DATE NULL,
    house_no VARCHAR(100) NULL, 
    street VARCHAR(100) NULL,
    barangay VARCHAR(100) NULL,
    city VARCHAR(100) NULL,
    province VARCHAR(100) NULL,
    occupation VARCHAR(250) NULL,
    email VARCHAR(50) NULL,
    philhealth_no VARCHAR(100) NULL,
    guardian VARCHAR(250) NULL
);

CREATE TABLE nurse_checks (
    id SERIAL PRIMARY KEY NOT NULL,
    patient_id VARCHAR(255) REFERENCES patients(patient_id) ON DELETE CASCADE,
    nurse_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    age INT NULL,
    check_date DATE NULL DEFAULT CURRENT_DATE,
    height INT NULL,
    weight INT NULL,
    systolic INT NULL,
    diastolic INT NULL,
    temperature INT NULL,
    heart_rate INT NULL,
    respiratory_rate INT NULL,
    bmi DECIMAL(5, 2) NULL,
    comment TEXT NULL 
);

CREATE TABLE doctor_visits (
    id SERIAL PRIMARY KEY NOT NULL,
    patient_id VARCHAR(255) REFERENCES patients(patient_id) ON DELETE CASCADE,
    follow_date DATE NULL,
    diagnosis TEXT NULL,
    findings TEXT NULL,
    category TEXT NULL,
    service TEXT NULL,
    medicine TEXT NULL,
    instruction TEXT NULL,
    quantity INT NULL
);

CREATE TABLE medtech_labs (
    id SERIAL PRIMARY KEY NOT NULL,
    patient_id VARCHAR(255) REFERENCES patients(patient_id) ON DELETE CASCADE,
    lab_result TEXT NULL
);

CREATE TABLE patient_history (
    id SERIAL PRIMARY KEY NOT NULL,
    patient_id VARCHAR(255) REFERENCES patients(patient_id) ON DELETE CASCADE,
    rhu_id INTEGER REFERENCES rhu(rhu_id) ON DELETE CASCADE,
    last_name VARCHAR(50) NOT NULL,
    first_name VARCHAR(50) NOT NULL,
    middle_name VARCHAR(50) NULL,
    suffix VARCHAR(50) NULL,
    phone VARCHAR(20) NULL,
    gender VARCHAR(10) NULL CHECK (gender IN ('Male', 'Female')),
    birthdate DATE NULL,
    house_no VARCHAR(100) NULL, 
    street VARCHAR(100) NULL,
    barangay VARCHAR(100) NULL,
    city VARCHAR(100) NULL,
    province VARCHAR(100) NULL,
    occupation VARCHAR(250) NULL,
    email VARCHAR(50) NULL,
    philhealth_no VARCHAR(100) NULL,
    guardian VARCHAR(250) NULL,
    age INT NULL,
    check_date DATE NULL DEFAULT CURRENT_DATE,
    height INT NULL,
    weight INT NULL,
    systolic INT NULL,
    diastolic INT NULL,
    temperature INT NULL,
    heart_rate INT NULL,
    respiratory_rate INT NULL,
    bmi DECIMAL(5, 2) NULL,
    comment TEXT NULL,
    follow_date DATE NULL
);

CREATE TABLE patient_lab_results (
    id SERIAL PRIMARY KEY NOT NULL,
    history_id INTEGER REFERENCES patient_history(id) ON DELETE CASCADE,
    lab_result TEXT NOT NULL
);

CREATE TABLE patient_prescriptions (
    id SERIAL PRIMARY KEY NOT NULL,
    history_id INTEGER REFERENCES patient_history(id) ON DELETE CASCADE,
    medicine TEXT NOT NULL,
    instruction TEXT NOT NULL,
    quantity INT NOT NULL
);

CREATE TABLE patient_services (
    id SERIAL PRIMARY KEY NOT NULL,
    history_id INTEGER REFERENCES patient_history(id) ON DELETE CASCADE,
    service TEXT NOT NULL,
    category TEXT NOT NULL
);

--FOR PRESCRIPTION ONLY--
CREATE TABLE patient_prescription_data(
    patient_prescription_id VARCHAR(255) PRIMARY KEY NOT NULL,
    patient_id VARCHAR(255) REFERENCES patients(patient_id) ON DELETE CASCADE,
    rhu_id INTEGER REFERENCES rhu(rhu_id) ON DELETE CASCADE,
    reciever VARCHAR(255) NULL,
    relationship_with_patient VARCHAR(255) NULL
);

CREATE TABLE prescription (
    id SERIAL PRIMARY KEY NOT NULL,
    patient_prescription_id VARCHAR(255) REFERENCES patient_prescription_data(patient_prescription_id) ON DELETE CASCADE,
    doctor_name VARCHAR(255) NULL,
    diagnosis TEXT NULL,
    findings TEXT NULL,
    category TEXT NULL,
    service TEXT NULL,
    product_id VARCHAR(255) NULL,
    batch_number VARCHAR(255) NULL,
    medicine TEXT NULL,
    instruction TEXT NULL,
    quantity INT NULL
);
//---------------------------------------------------------------------------------//
CREATE TABLE rhu (
    rhu_id SERIAL PRIMARY KEY,
    rhu_name VARCHAR(255) NOT NULL,
    rhu_address VARCHAR(255) NOT NULL
);

CREATE TABLE beneficiary (
    beneficiary_id SERIAL PRIMARY KEY NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    first_name VARCHAR(100) NOT NULL,
    middle_name VARCHAR(100) NULL,
    phone VARCHAR(20) NULL,
    gender VARCHAR(10) NULL CHECK (gender IN ('Male', 'Female')),
    birthdate DATE NULL,
    age INT NULL,
    street VARCHAR(255) NULL,
    barangay VARCHAR(255) NULL,
    city VARCHAR(255) NULL,
    province VARCHAR(255) NULL, 
    occupation VARCHAR(255) NULL,
    senior_citizen TEXT NULL,
    pwd TEXT NULL,
    picture VARCHAR(255) NULL,
    note VARCHAR(255) NULL,
    processed_date DATE NULL
);


CREATE TABLE transaction_records (
    id SERIAL PRIMARY KEY NOT NULL,
    beneficiary_id INTEGER REFERENCES beneficiary(beneficiary_id) ON DELETE CASCADE,
    transaction_number VARCHAR(50) NOT NULL UNIQUE,
    date_issued DATE NULL,
    doctor VARCHAR(255) NULL,
    reciever VARCHAR(255) NULL,
    relationship_beneficiary VARCHAR(100) NULL
);

CREATE TABLE transaction_medicine (
    id SERIAL PRIMARY KEY NOT NULL,
    tran_id INTEGER REFERENCES transaction_records(id) ON DELETE CASCADE,
    product_id VARCHAR(255) NULL,
    batch_number VARCHAR(50) NOT NULL,
    product_details TEXT NULL,
    quantity INT NOT NULL CHECK (quantity > 0)
);

CREATE TABLE inventory (
    id SERIAL PRIMARY KEY NOT NULL,
    rhu_id INTEGER REFERENCES rhu(rhu_id) ON DELETE CASCADE,
    product_id VARCHAR(255) NOT NULL,
    product_code VARCHAR(255) NOT NULL,
    product_name VARCHAR(255) NULL,
    brand_name VARCHAR(255) NULL,
    supplier VARCHAR(255) NULL,
    dosage_form VARCHAR(100) NULL,
    dosage VARCHAR(100) NULL,
    reorder_level INT NULL DEFAULT 0,
    batch_number VARCHAR(255) NOT NULL,
    date_added DATE NULL DEFAULT CURRENT_DATE,
    expiration DATE NULL,
    product_quantity INT NOT NULL CHECK (product_quantity >= 0)
);

CREATE INDEX idx_transaction_number ON transaction_records(transaction_number);
CREATE INDEX idx_batch_number_transaction ON transaction_records(batch_number);
CREATE INDEX idx_product_code ON inventory(product_code);
CREATE INDEX idx_rhu_id ON inventory(rhu_id);
CREATE INDEX idx_batch_number_inventory ON inventory(batch_number);
CREATE INDEX idx_product_name_inventory ON inventory(product_name);
CREATE INDEX idx_beneficiary_name ON beneficiary USING gin(to_tsvector('english', first_name || ' ' || last_name));

CREATE INDEX idx_beneficiary_name_gender ON beneficiary (last_name, first_name, gender);
CREATE INDEX idx_inventory_rhu_product ON inventory(rhu_id, product_id);
CREATE INDEX idx_rhu_id ON rhu(rhu_id);